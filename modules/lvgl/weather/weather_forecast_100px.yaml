---
# Weather forcast from Home Assistant Accuweather plugin
# Add this to your configuration.yaml
#
# template:
#   - trigger:
#       - trigger: time_pattern
#         hours: /1
#     action:
#       - action: weather.get_forecasts
#         data:
#           type: daily
#         target:
#           entity_id: weather.home
#         response_variable: hourly
#     sensor:
#       - name: Weather Forecast
#       unique_id: weather_forecast
#       state: "OK"
#       attributes:
#         condition_0: >
#           {{ hourly["weather.home"].forecast[0].condition }}
#         temperature_hi_0: >
#           {{ hourly["weather.home"].forecast[0].temperature }}
#         temperature_lo_0: >
#           {{ hourly["weather.home"].forecast[0].templow }}            
#         day_0: >
#           {{ as_timestamp(hourly["weather.home"].forecast[0].datetime) | timestamp_custom('%a') }}
        
#         condition_1: >
#           {{ hourly["weather.home"].forecast[1].condition }}
#         temperature_hi_1: >
#           {{ hourly["weather.home"].forecast[1].temperature }}
#         temperature_lo_1: >
#           {{ hourly["weather.home"].forecast[1].templow }}            
#         day_1: >
#           {{ as_timestamp(hourly["weather.home"].forecast[1].datetime
            
text_sensor:
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: condition_0
    id: condition_0
    on_value:
        then:  !include { file: weather_icons_update.yaml, vars: { size: 100, id: forecast_condition_icon_0, input_id: condition_0 }}
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_hi_0
    id: temperature_hi_0
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_hi_0
              text:
                format: "%s°"
                args: [ 'id(temperature_hi_0).state.c_str()' ]                

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_lo_0
    id: temperature_lo_0
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_lo_0
              text:
                format: "%s°"
                args: [ 'id(temperature_lo_0).state.c_str()' ]
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: day_0
    id: day_0
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_day_0
              text:
                format: "%s"
                args: [ 'id(day_0).state.c_str()' ] 

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: condition_1
    id: condition_1
    on_value:
        then:  !include { file: weather_icons_update.yaml, vars: { size: 100, id: forecast_condition_icon_1, input_id: condition_1 }}
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_hi_1
    id: temperature_hi_1
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_hi_1
              text:
                format: "%s°"
                args: [ 'id(temperature_hi_1).state.c_str()' ]                

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_lo_1
    id: temperature_lo_1
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_lo_1
              text:
                format: "%s°"
                args: [ 'id(temperature_lo_1).state.c_str()' ]
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: day_1
    id: day_1
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_day_1
              text:
                format: "%s"
                args: [ 'id(day_1).state.c_str()' ]

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: condition_2
    id: condition_2
    on_value:
        then:  !include { file: weather_icons_update.yaml, vars: { size: 100, id: forecast_condition_icon_2, input_id: condition_2 }}
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_hi_2
    id: temperature_hi_2
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_hi_2
              text:
                format: "%s°"
                args: [ 'id(temperature_hi_2).state.c_str()' ]                

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_lo_2
    id: temperature_lo_2
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_lo_2
              text:
                format: "%s°"
                args: [ 'id(temperature_lo_2).state.c_str()' ]
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: day_2
    id: day_2
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_day_2
              text:
                format: "%s"
                args: [ 'id(day_2).state.c_str()' ]  

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: condition_3
    id: condition_3
    on_value:
        then:  !include { file: weather_icons_update.yaml, vars: { size: 100, id: forecast_condition_icon_3, input_id: condition_3 }}
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_hi_3
    id: temperature_hi_3
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_hi_3
              text:
                format: "%s°"
                args: [ 'id(temperature_hi_3).state.c_str()' ]                

  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: temperature_lo_3
    id: temperature_lo_3
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_temperature_lo_3
              text:
                format: "%s°"
                args: [ 'id(temperature_lo_3).state.c_str()' ]
                
  - platform: homeassistant
    entity_id: sensor.weather_forecast
    attribute: day_3
    id: day_3
    on_value:
        then:
          # Update weather_condition
          - lvgl.label.update:
              id: forecast_day_3
              text:
                format: "%s"
                args: [ 'id(day_3).state.c_str()' ]     